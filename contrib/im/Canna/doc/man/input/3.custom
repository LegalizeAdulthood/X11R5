３カスタマイズの方法

	    かな漢字変換に関して変換に利用する辞書を始めとしてキー操作やロー
	  マ字かな変換テーブルにいたるまでカスタマイズすることができます。

	    日本語入力の機能やキー操作を設定する  カスタマイズファイル(.iroha)
	    ローマ字かな変換の規則を設定する      ローマ字かな変換ソース
						 	         (×××.rdef)
					     	  ローマ字かな変換テーブル
								 (×××.rdic)

	    ここではそれぞれのユーザにあったカスタマイズをいかに行うかについて
	  説明します。

３．１   初期化(カスタマイズ)ファイル

	    カスタマイズは初期化(カスタマイズ)ファイルを用いて行います。初期
	  化(カスタマイズ)ファイルは特別の指定が無いかぎりホームディレクトリ
	  にある .iroha というファイルが用いられます。
	    環境変数の設定状況により参照する初期化(カスタマイズ)ファイルが違
	  ってきます。初期化(カスタマイズ)ファイルは次の順番で探し出されます。

       (1) 環境変数 IROHAFILE が設定されているとき
	    環境変数 IROHAFILE によって示されるファイルが存在すれば、
	  そのファイルが初期化(カスタマイズ)ファイルとして使用されます。
       (2) $HOME/.irohaが存在する時
	    そのファイルが初期化(カスタマイズ)ファイルとして使用されます。
       (3) 上記のいずれでもないとき
	    /usr/local/lib/iroha/default.iroha が初期化(カスタマイズ)ファイ
	  ルとして用いられます。
	  また、(2)(3)の場合はそれぞれ次のファイルも読み込まれます。

       ・(2) の場合
	(2.1)   環境変数 DISPLAY に値が設定されておりその値が×××:0 である
		ときに、ホームディレクトリに.iroha-××× という名前のファイ
		ルが存在するとき。さらにこのファイルも読み込まれます。
	(2.2)   環境変数 TERM に値が設定されており、その値が×××であると
		きにホームディレクトリに .iroha-××× という名前のファイルが
		存在するとき。さらにこのファイルも読み込まれます。
       ・(3) の場合
	(3.1)   環境変数 DISPLAY に値が設定されており、その値が×××:0 であ
		るときに /usr/local/lib/iroha に ×××.irohaという名前のファ
		イルが存在するとき。さらにこのファイルも読み込まれます。
	(3.2)   環境変数 TERM に値が設定されており、その値が×××であると
		きに /usr/local/lib/iroha に×××.irohaという名前のファイルが存在す
		るとき。さらにこのファイルも読み込まれます。

	    以上を表にすると初期化(カスタマイズ)ファイルのサーチ順は以下の
	  通りになります。
          ┏━┳━━━━━━━━━━━━━━━━━━━━━━━┓
          ┃  ┃            ファイル                          ┃
          ┣━╋━━━━━━━━━━━━━━━━━━━━━━━┫
          ┃１┃IROHAFILE で指定したファイル                  ┃
          ┠─╂───────────────────────┨
          ┃２┃$HOME/.iroha                                  ┃
          ┃  ┃                                              ┃
          ┃  ┃$HOME/.iroha-Ｘのディスプレイ名               ┃
          ┃  ┃                                              ┃
          ┃  ┃$HOME/.iroha-term名                           ┃
          ┠─╂───────────────────────┨
          ┃３┃/usr/local/lib/iroha/default.iroha            ┃
          ┃  ┃                                              ┃
          ┃  ┃/usr/local/lib/iroha/Ｘのディスプレイ名.iroha ┃
          ┃  ┃                                              ┃
          ┃  ┃/usr/local/lib/iroha/term 名.iroha            ┃
          ┗━┻━━━━━━━━━━━━━━━━━━━━━━━┛

	    初期化(カスタマイズ)ファイルは基本的に１行に１つの記述になって
	  います。また、＃から行末まではコメントとみなされます。例えば次のよ
	  うな記述になります。
 ┌─────────────────────────────────────┐
 │# sample setting                                                          │
 │                                                                          │
 │initialMode        alphaMode # initial mode of IROHA                      │
 │cursorWrap         on        # wrapping arround for cursor movement       │
 │numericalKeySelect on        # enable selecting a candidate by hex key    │
 │selectDirect       off       # selecting by numericalKey key quit ICHIRAN │
 │                               mode                                       │
 │bunsetsuKugiri     off       # separate each BUNSETSU by white space      │
 │characterBasedMove on        # movement based on KANA characters          │
 │reverseWidely      off       # reverse whole pre-edit KANA                │
 │quitIfEndOfIchiran off       # quit ICHIRAN mode if no candidates exists  │
 │breakIntoRoman     on        # backspace key breaks ROMAN character or not│
 │                                                                          │
 │romkanaTable    "default.rdic"                                            │
 │                                                                          │
 │dictionary      "iroha"                                                   │
 │dictionary      "fuzokugo"                                                │
 │dictionary      "hojomwd"                                                 │
 │dictionary      "hojoswd"                                                 │
 │                                                                          │
 │bushudic        "bushu"                                                   │
 │                                                                          │
 │touroku         ^z                                                        │
 │                                                                          │
 │mojishu {                                                                 │
 │         Capitalize          ^c                                           │
 │         Zenkaku             ^z                                           │
 │         Hankaku             ^a                                           │
 │}                                                                         │
 └─────────────────────────────────────┘
	    /usr/local/lib/iroha/sample の下にカスタマイズファイルのサンプル
	  (×××.iroha)がありますので参考にして下さい。default.iroha がデ
	  フォルトのセッティングをカスタマイズファイルで表したものになってい
	  ます。
	    以下に、カスタマイズの記述について説明します。

３．２   ローマ字かな変換テーブルの設定

	    使用したいローマ字かな変換テーブルを記述します。
		romkanatable    "romaji.rdic"

	    romkantable に指定するものはファイル名です。カレントディレクトリ、
	  ユーザのホームディレクトリ、/usr/local/lib/iroha/dic の順に指定され
	  たファイル名をさがし出し、最初にみつかったファイルがローマ字かな変
	  換テーブルとして用いられます。
	    ローマ字かな変換テーブルの作り方は 3.6 ローマ字かな変換テーブル
	  のカスタマイズを参照してください。

３．３   使用する辞書の指定

	    本日本語入力システムでは複数の辞書を同時に利用することができます。
	  どの辞書を利用するかの指定はその辞書をどのように利用するかにより次
	  の３種類の方法があります。
	   ┏━━━━━┯━━━━━━━┯━━━━━━━━━━━━━━━━━━┓
           ┃キーワード│  辞書の種類  │          備考                      ┃
	   ┣━━━━━┿━━━━━━━┿━━━━━━━━━━━━━━━━━━┫
	   ┃dictionary│システム辞書  │システム辞書として用いる辞書を指定し┃
	   ┃          │              │ます。                              ┃
	   ┃          │              │この辞書には単語の登録は行えません。┃
	   ┠─────┼───────┼──────────────────┨
	   ┃bushudic  │部首変換用辞書│部首変換に用いる辞書を指定します。  ┃
	   ┠─────┼───────┼──────────────────┨
	   ┃userdic   │ユーザ用辞書  │ユーザ用の辞書を指定します。この辞書┃
	   ┃          │              │には単語を登録することができます。  ┃
	   ┃          │              │この辞書の形式はテキスト形式でなけれ┃
	   ┃          │              │ばなりません。注                    ┃
	   ┗━━━━━┷━━━━━━━┷━━━━━━━━━━━━━━━━━━┛
	    注  テキスト形式辞書、バイナリ形式辞書については 1 概説の(2)
	        および 4.2 辞書を参照して下さい。

	    使用する辞書の指定はカスタマイズファイルの中で次のように行います。

		dictionary "iroha"
		dictionary "fuzokugo"
		dictionary "hojomwd"
		dictionary "hojoswd"
		dictionary "yuubin"
		dictionary "katakana"
		dictionary "software"
		bushudic   "bushu"
		userdic    "mine"

	    指定できる辞書としては以下のものがあります。
	   ┏━━━━━━┯━━━━━━━━━━━━━━┓
           ┃  辞書名    │        説明                ┃
           ┣━━━━━━┿━━━━━━━━━━━━━━┫
           ┃  iroha     │基幹辞書                    ┃
           ┠──────┼──────────────┨
           ┃  fuzokugo  │付属語辞書                  ┃
           ┠──────┼──────────────┨
           ┃  bushu     │部首辞書                    ┃
           ┠──────┼──────────────┨
           ┃  yuubin    │郵便番号辞書                ┃
           ┠──────┼──────────────┨
           ┃  hojomwd   │口語表現などの補助的な自立語┃
           ┠──────┼──────────────┨
           ┃  hojoswd   │口語表現などの補助的な付属語┃
           ┠──────┼──────────────┨
           ┃  necgaiji  │pc9801の外字を含む語        ┃
           ┗━━━━━━┷━━━━━━━━━━━━━━┛

	    これらの辞書のうち、iroha が基本的な辞書になります。また、iroha
	  を使用する際 fuzokugo も必ず指定しなければなりません。したがって最低
	  限使用する辞書は iroha および fuzokugo であり、次のように指定すること
	  になります。

		dictionary    "iroha"
		dictionary    "fuzokugo"

	    郵便番号辞書は郵便番号から地名への変換を行うための辞書です。必要
	  に応じてご利用下さい。
	    hojomwd 、hojoswd は補助的に追加された付属語の辞書です。口語表現
	  などはこの辞書を使用することにより変換し易くなります。必要に応じて
	  ご利用下さい。
	    上記の３つの辞書は以下のような指定を行うことにより利用することが
	  できます。

		dictionary    "yuubin"
		dictionary    "hojomwd"
		dictionary    "hojoswd"

	    bushu は部首変換を行うときに使われる辞書です。部首変換を利用する
	  場合にはこの辞書を使うことを以下のようにして指定して下さい。辞書の
	  指定のためのキーワードは bushudic であり、他の辞書を指定するときの
	  キーワード dictionary とは異なりますのでご注意下さい。

		bushudic      "bushu"

	    ユーザ自身が追加登録した単語を納めておくための辞書を指定するには
	  キーワード userdic を用います。単語登録の時、登録された単語をどの辞
	  書に納めるかを尋ねられますが、その時選択できる辞書は userdic で指定
	  した辞書に限られます。userdic で指定する辞書は単語登録を行う関係上
	  テキスト形式の辞書でなければなりません。(注) userdic の指定は以下の
	  ように行います。

		userdic       "myTextDictionary"

	    注  テキスト形式辞書、バイナリ形式辞書については1 概説の(2) お
	       よび4.2 辞書を参照して下さい。

	    ユーザ辞書として最初は中身が空のファイルを指定しておき、順次辞書
	  登録により単語を追加していくのがよいでしょう。
	    以下の辞書が参考用としてシステムファイル
	  (/usr/local/lib/iroha/dic/user)に含まれます。ユーザ辞書を作成する
	  ときの参考にして下さい。

            ┏━━━━━━┯━━━━━━━━━━━━━━┓
            ┃  辞書名    │        説明                ┃
            ┣━━━━━━┿━━━━━━━━━━━━━━┫
            ┃  katakana  │カタカナ語                  ┃
            ┠──────┼──────────────┨
            ┃  software  │ソフトウェア語              ┃
            ┠──────┼──────────────┨
            ┃  chimei    │地名                        ┃
            ┗━━━━━━┷━━━━━━━━━━━━━━┛
	    注  デフォルト初期化( カスタマイズ)ファイル
	       (/usr/local/lib/iroha/deafult.iroha)では userdic としてあらか
	       じめ "user" が指定されています。

３．４   キー操作のカスタマイズ

	    例えば日本語モードとアルファベットモードを切り替えるキーがデフォ
	  ルトでは CTRL+O または XFER ですが、利用者はこのキーを好みに応じて
	  変更することが可能です。かな漢字変換に用いられるほとんどのキーの割
	  り当てをデフォルトとは違う割り当てに割り当て直すことが初期化(カスタ
	  マイズ)ファイル(.iroha)を用いて行うことができます。

	キーの割り当ての有効範囲
	    かな漢字変換では多くのモードの遷移があります。キーの割り当ては各
	  モード毎に個別に変更することができます。また、すべてのモードのキー
	  の割り当てを一括して変更することができます。

	変更できる機能
	    キーの割り当ての変更は機能名に対してキー名を記述することにより行
	  います。主な機能名としては以下のものがあります。その他の機能名に関
	  しては付録Ｄを参照して下さい。

	・主な機能名
    ┏━━━━━━━━━┯━━━━━━━━━━━━━━━┯━━━━━━┯━━┓
    ┃      名前        │        機能                  │デフォルト  │備考┃
    ┣━━━━━━━━━┿━━━━━━━━━━━━━━━┿━━━━━━┿━━┫
    ┃  alphaMode       │アルファベットモードに移行する│  C-o,XFER  │    ┃
    ┠─────────┼───────────────┼──────┼──┨
    ┃  quotedInsert    │次の一文字を無条件に入力する  │    C-q     │    ┃
    ┠─────────┼───────────────┼──────┼──┨
    ┃  kakutei         │確定する                      │RETURN,NFER │    ┃
    ┠─────────┼───────────────┼──────┼──┨
    ┃  extend          │領域伸ばし                    │    C-o     │    ┃
    ┠─────────┼───────────────┼──────┼──┨
    ┃  shrink          │領域縮め                      │    C-i     │    ┃
    ┠─────────┼───────────────┼──────┼──┨
    ┃  touroku         │単語登録                      │    HELP    │    ┃
    ┠─────────┼───────────────┼──────┼──┨
    ┃  forward         │右選択                        │  C-f,→    │    ┃
    ┠─────────┼───────────────┼──────┼──┨
    ┃  backward        │左選択                        │  C-b,←    │    ┃
    ┠─────────┼───────────────┼──────┼──┨
    ┃  previous        │前選択                        │  C-p,↑    │    ┃
    ┠─────────┼───────────────┼──────┼──┨
    ┃  next            │次選択                        │  C-n,↓    │    ┃
    ┠─────────┼───────────────┼──────┼──┨
    ┃  beginningOfLine │先頭選択                      │    C-a     │    ┃
    ┠─────────┼───────────────┼──────┼──┨
    ┃  endOfLine       │末尾選択                      │    C-e     │    ┃
    ┠─────────┼───────────────┼──────┼──┨
    ┃  deleteNext      │次一文字消去                  │    C-d     │    ┃
    ┠─────────┼───────────────┼──────┼──┨
    ┃  deletePrevious  │前一文字消去                  │ BACKSPACE  │    ┃
    ┠─────────┼───────────────┼──────┼──┨
    ┃  killToEndOfLine │行末まで消去                  │    C-k     │    ┃
    ┠─────────┼───────────────┼──────┼──┨
    ┃  henkan          │変換                          │ SPACE,XFER │    ┃
    ┠─────────┼───────────────┼──────┼──┨
    ┃  quit            │取りやめ                      │    C-g     │    ┃
    ┠─────────┼───────────────┼──────┼──┨
    ┃  selfInsert      │文字挿入                      │   a,b,c…  │    ┃
    ┗━━━━━━━━━┷━━━━━━━━━━━━━━━┷━━━━━━┷━━┛
	  この他の機能名に関しては付録Ｄの「カスタマイズに用いる機能名一覧表」
	を参照して下さい。

	機能に割り当てるキーの指定のしかた
	    ある機能に対してキーを割り当てるときは基本的には次のような記述に
	  より割り当てます。

		機能名          キー

	    キーは "a" や "b" のように指定すれば良いです。コントロールキーを
	  押しながら何らかのキーを押すのはキーの指定の前に "^" あるいは "C-"
	  を付けることで表現できます。ファンクションキーなどの特殊キーについ
	  ては以下に示す名前にて指定することができます。コンマ(",")や "#" に
	  ついては前に "\" バックスラッシュを付けて "\," となるように記述して
	  ください。
        ┏━━━━━━━━━━━━┯━━━━━━┓
        ┃        キー            │   名前     ┃
        ┣━━━━━━━━━━━━┿━━━━━━┫
        ┃ｆ・１(以下２、３、…)  │F1          ┃
        ┃                        │            ┃
        ┃ｐｆ１(以下２、３、…)  │PF1         ┃
        ┃                        │            ┃
        ┃ＥＳＣ                  │Escape      ┃
        ┃                        │            ┃
        ┃ＴＡＢ                  │Tab         ┃
        ┃                        │            ┃
        ┃ＮＦＥＲ                │Nfer        ┃
        ┃                        │            ┃
        ┃ＸＦＥＲ                │Xfer        ┃
        ┃                        │            ┃
        ┃ＢＳ                    │BackSpace   ┃
        ┃                        │            ┃
        ┃ＩＮＳ                  │Insert      ┃
        ┃                        │            ┃
        ┃ＤＥＬ                  │Delete      ┃
        ┃                        │            ┃
        ┃ＲＯＬＬＵＰ            │Rollup      ┃
        ┃                        │            ┃
        ┃ＲＯＬＬＤＯＷＮ        │Rolldown    ┃
        ┃                        │            ┃
        ┃↑                      │Up          ┃
        ┃                        │            ┃
        ┃←                      │Left        ┃
        ┃                        │            ┃
        ┃→                      │Right       ┃
        ┃                        │            ┃
        ┃↓                      │Down        ┃
        ┃                        │            ┃
        ┃ＨＯＭＥＣＬＲ          │Clear       ┃
        ┃                        │            ┃
        ┃ＨＥＬＰ                │Help        ┃
        ┃                        │            ┃
        ┃ＥＮＴＥＲ              │Enter       ┃
        ┃                        │            ┃
        ┃(ＳＰＡＣＥ)            │Space       ┃
        ┃                        │            ┃
        ┃(ＲＥＴＵＲＮ)          │Return      ┃
        ┗━━━━━━━━━━━━┷━━━━━━┛

	    また、Ｘウィンドウにおけるアプリケーションには以下の記述を受けつ
	  けるものもあります。(ＴＴＹベースの日本語入力では、これらのキー記
	  述は無視されます)
        ┏━━━━━━━━━━━━┯━━━━━━┓
        ┃        キー            │   名前     ┃
        ┣━━━━━━━━━━━━┿━━━━━━┫
        ┃    ＣＴＲＬ＋ＮＦＥＲ  │  C-Nfer    ┃
        ┃                        │            ┃
        ┃    ＣＴＲＬ＋ＸＦＥＲ  │  C-Xfer    ┃
        ┃                        │            ┃
        ┃    ＣＴＲＬ＋  ↑      │  C-Up      ┃
        ┃                        │            ┃
        ┃    ＣＴＲＬ＋  ←      │  C-Left    ┃
        ┃                        │            ┃
        ┃    ＣＴＲＬ＋  →      │  C-Right   ┃
        ┃                        │            ┃
        ┃    ＣＴＲＬ＋  ↓      │  C-Down    ┃
        ┃                        │            ┃
        ┃  ＳＨＩＦＴ＋ＮＦＥＲ  │  S-Nfer    ┃
        ┃                        │            ┃
        ┃  ＳＨＩＦＴ＋ＸＦＥＲ  │  S-Xfer    ┃
        ┃                        │            ┃
        ┃  ＳＨＩＦＴ＋  ↑      │  S-Up      ┃
        ┃                        │            ┃
        ┃  ＳＨＩＦＴ＋  ←      │  S-Left    ┃
        ┃                        │            ┃
        ┃  ＳＨＩＦＴ＋  →      │  S-Right   ┃
        ┃                        │            ┃
        ┃  ＳＨＩＦＴ＋  ↓      │  S-Down    ┃
        ┗━━━━━━━━━━━━┷━━━━━━┛
	    上記の名前において大文字・小文字は区別しません。

	    以下のキーは他のキーと等価な場合がありますので、どちらか一方のキ
	  ーに機能を割り当てると等価なキーにも機能を割り当てたことになります。
        ┏━━━━━━━━━━━━┯━━━━━━━━━━━━━━━━━━━┓
        ┃          キー          │          等価なキー                  ┃
        ┣━━━━━━━━━━━━┿━━━━━━━━━━━━━━━━━━━┫
        ┃  ＣＴＲＬ＋ｈ(C-h)     │ＢＳ(BackSpace)                       ┃
        ┃                        │                                      ┃
        ┃  ＣＴＲＬ＋ｉ(C-i)     │ＴＡＢ(Tab)                           ┃
        ┃                        │                                      ┃
        ┃  ＣＴＲＬ＋ｋ(C-k)     │ＨＯＭＥＣＬＲ(Clear)                 ┃
        ┃                        │                                      ┃
        ┃  ＣＴＲＬ＋ｍ(C-m)     │ＥＮＴＥＲ(Enter),ＲＥＴＵＲＮ(return)┃
        ┃                        │                                      ┃
        ┃  ＣＴＲＬ＋〔(C-[)     │ＥＳＣ(Escape)                        ┃
        ┃                        │                                      ┃
        ┃  ＣＴＲＬ＋＠(C-@)     │ＣＴＲＬ＋ＳＰＡＣＥ                  ┃
        ┗━━━━━━━━━━━━┷━━━━━━━━━━━━━━━━━━━┛

	    キーの名前として undefine を指定することにより機能名で指定された
	  機能に対するキーの割り当てをすべて未定義状態に戻すことができます。

	キーの割り当ての有効範囲
	    上記の割り当てでは日本語入力時のすべての状態でのキーの割り当てが
	  影響されますが、特定のモードでのみ、キーの割り当てを行いたいときに
	  はモード名をキーにした中括弧で囲むことにより割り当てを行うことがで
	  きます。

		モード名 {
		  機能名        キー
		  ………
		}

	    このようにすることにより特定のモードでのキーの割り当てをそのモー
	  ドの時だけ単独で変更することができます。

	    モードの名前は次のものがあります。
        ┏━━━━━━━━━━┯━━━━━━━━━━━━━━━━━━━━━━┓
        ┃    名前            │              説明                          ┃
        ┣━━━━━━━━━━┿━━━━━━━━━━━━━━━━━━━━━━┫
        ┃  alpha             │アルファベットを入力している状態            ┃
        ┠──────────┼──────────────────────┨
        ┃  yomiganai         │日本語入力モードでまだ文字を入力していない状┃
        ┃                    │態                                          ┃
        ┠──────────┼──────────────────────┨
        ┃  yomi              │読みを入力している状態                      ┃
        ┠──────────┼──────────────────────┨
        ┃  mojishu           │文字種変換を行っている状態                  ┃
        ┠──────────┼──────────────────────┨
        ┃  tankouho          │変換キーを押して候補を表示している状態      ┃
        ┠──────────┼──────────────────────┨
        ┃  ichiran           │候補一覧表示をしている状態                  ┃
        ┠──────────┼──────────────────────┨
        ┃  henkanNyuryoku    │かな漢字変換を伴う入力を行うモード          ┃
        ┃                    │                    (yomiganai と同じです)  ┃
        ┠──────────┼──────────────────────┨
        ┃  zenHiraKakutei    │全角ひらがな確定入力モード                  ┃
        ┠──────────┼──────────────────────┨
        ┃  zenKataKakutei    │全角カタカナ確定入力モード                  ┃
        ┠──────────┼──────────────────────┨
        ┃  zenAlphaKakutei   │全角アルファベット確定入力モード            ┃
        ┠──────────┼──────────────────────┨
        ┃  hanKataKakutei    │半角カタカナ確定入力モード                  ┃
        ┠──────────┼──────────────────────┨
        ┃  hanAlphaKakutei   │半角アルファベット確定入力モード            ┃
        ┗━━━━━━━━━━┷━━━━━━━━━━━━━━━━━━━━━━┛
	    モード名は、大文字・小文字を区別しません。

	複数処理でのキーの割り当て(マルチシーケンス)

	    最初に説明したキーの割り当ての方法は、１つの機能に１つのキー操作
	  を割り当てることでした。しかし、キーの割り当てはキーと機能を１対１
	  にしか対応させられないわけではなく、多対多に対応することもできます。
	  要するに複数の機能を複数のキー操作に割り当てられるということです。
	  次のような記述をすることにより割り当てられます。

		機能名１,機能名２,…,機能名ｎ    キー１,キー２,…,キーｎ

	    機能名と機能名、キーとキーの区切りはコンマ(",")を使用します。ま
	  た、特定のモードだけで割り当てることもできます。次のように記述しま
	  す。

		モード名 {
		  機能名１,機能名２,…,機能名ｎ    キー１,キー２,…,キーｎ
		  ……
		}

	    キーシーケンスを入力中にその状態から抜け出したくなった場合は quit
	  (取りやめ)を割り当てたキーを押して下さい。デフォルトでは CTRL+G で
	  す。

３．５   その他のカスタマイズ

	    その他にも以下の設定をカスタマイズファイルを用いて行うことができ
	  ます。名前は大文字と小文字のどちらで指定しても結構です。

	・initialMode
	    起動時のモードを指定します。デフォルトはアルファベットモードです。
	  以下が指定できます。
        ┏━━━━━━━━━━━━┯━━━━━━━━━━━━━━━━┓
        ┃      指定              │        説明                    ┃
        ┣━━━━━━━━━━━━┿━━━━━━━━━━━━━━━━┫
        ┃  alphaMode             │アルファベットモード            ┃
        ┠────────────┼────────────────┨
        ┃  henkanNyuryokuMode    │変換入力モード                  ┃
        ┠────────────┼────────────────┨
        ┃  zenHiraKakuteiMode    │全角ひらがな確定入力モード      ┃
        ┠────────────┼────────────────┨
        ┃  zenKataKakuteiMode    │全角カタカナ確定入力モード      ┃
        ┠────────────┼────────────────┨
        ┃  zenAlphaKakuteiMode   │全角アルファベット確定入力モード┃
        ┠────────────┼────────────────┨
        ┃  hanKataKakuteiMode    │半角カタカナ確定入力モード      ┃
        ┠────────────┼────────────────┨
        ┃  hanAlphaKakuteiMode   │半角アルファベット確定入力モード┃
        ┠────────────┼────────────────┨
        ┃  zenHiraHenkanMode     │全角ひらがな変換入力モード      ┃
        ┠────────────┼────────────────┨
        ┃  zenKataHenkanMode     │全角カタカナ変換入力モード      ┃
        ┠────────────┼────────────────┨
        ┃  zenAlphaHenkanMode    │全角アルファベット変換入力モード┃
        ┠────────────┼────────────────┨
        ┃  hanKataHenkanMode     │半角カタカナ変換入力モード      ┃
        ┠────────────┼────────────────┨
        ┃  hanAlphaHenkanMode    │半角アルファベット変換入力モード┃
        ┗━━━━━━━━━━━━┷━━━━━━━━━━━━━━━━┛
	    (大文字・小文字の区別はありません)

	・cursorWrap
	    読みを入力している状態や候補を表示している状態でカーソルを移動す
	  る時に右端から右へ移動する操作をした時や左端から左や移動する操作を
	  した時に反対側の端にカーソルが移動することを指定します。on で移動
	  し、off で移動しません。デフォルトは on です。

	・numericalKeySelect(hexkeySelect)
	    候補一覧を表示している時に、数字キーを用いて候補を選択できるかど
	  うかを指定します。on あるいは off を指定します。デフォルトは on で
	  す。off を指定すると、これらのキーを押した場合選択されている候補が
	  確定し、押下したキーは次の読みの入力として取り扱われます。この機能
	  は以前の版で hexkeySelect と呼ばれたものと同等であり、hexkeySelect
	  という名前で指定することもできます。

	・selectDirect
	    numericalkeySelect が on であるときに、数字キーで候補を選択した時
	  に候補一覧表示のままかそうでないかを指定します。on の場合は候補一覧
	  が終了します。デフォルトは off です。

	・bunsetsuKugiri
	    候補を表示している時に文節ごとに空白で区切るかどうかを指定します。
	  on で区切ります。デフォルトは off です。

	・characterBasedMove
	    読みを入力している時にカーソル移動を行う場合に、文字単位で移動を
	  行うかどうかを指定します。デフォルトは on です。characterBasedMove
	  を off にすると、ローマ字かな変換の確定の単位を基にしてカーソルを移
	  動します。すなわち、"ju" と入力した場合には、『じゅ』は一文字とみな
	  されてカーソルが移動します。文字削除の時も同様に取り扱われます。

	・reverseWidely
	    on を指定すると読みを入力している時の文字列の反転範囲が広くなりま
	  す。reverseWidely は旧バージョンとの互換性のためにあります。
	  デフォルトは off です。

	・quitIfEndOfIchiran
  	    候補一覧表示をしている時に、最終候補を表示している状態で次候補操
	  作を行うと候補一覧表示を終了し、読みそのものを候補として表示するよ
	  うになります。２打目のスペースキーを候補一覧表示にカスタマイズして
	  いる時などは quitIfEndOfIchiran を on にしておくと便利です。デフォ
	  ルトは off です。

	・breakIntoRoman
	    バックスペースキーを打った時に直前のローマ字かな変換された文字列
	  がローマ字に戻るかどうかを指定します。デフォルトは off です。

	・gakushu
	    かな漢字変換が学習をを行うかどうかを指定します。デフォルトは on
	  です。

	・stayAfterValidate
	    候補一覧表示状態で候補を選択して単一候補表示状態に戻ったときに、
	  カレント文節を次の文節に移動させるかどうかを指定します。off でカレ
	  ント文節は次の文節に移動します。on ではカレント文節は変わりません。
	  デフォルトは on です。

	・kakuteiIfEndOfBunsetsu
	    最右文節で次文節へ移動しようとしたときに、確定するか否かを指定し
	  ます。on で確定します。off を指定すると最左文節がカレント文節になり
	  ます。デフォルトは off です。また、stayAfterValidate が off のときで
	  kakuteiIfEndOfBunsetsu が on のときは最右文節で候補一覧状態から候補
	  を選択すると全文が確定します。

	・gramaticalQuestion
	    単語登録で品詞を指定した後、詳細な品詞分類のための質問を行うか否か
	  を指定します。on で質問を行い、off では質問をしません。デフォルトは
	  on です。

	・nHenkanForIchiran
	    変換キー(デフォルトではスペースキーとＸＦＥＲ)を何回か押すと候補
	  一覧表示が行われるようにする事ができます。nHenkanForIchiran に対し
	  て数を指定すると、指定された回数変換キーを押すことにより候補一覧が
	  表示されます。0 を指定すると何回変換キーを押しても一覧表示が行われ
	  なくなります。デフォルトは 2 で、２回変換キーを押すと一覧表示になり
	  ます。

	・modeString()
	    入力モードの表示文字列を変更します。次のように記述します。
		 modeString(henkanNyuryoku)  "[変換入力]"
	  結果は次のようになります。

        │
        │prompt＞
        │
        │  ［変換入力］
        └─────────────────────────────────
	    そのモードでモード表示文字列を特に変更しないで、それより前の状態
	  の表示と同じにしたい場合は文字列の代わりにＮＵＬＬを記述します。
	    指定できるモードには次のものがあります。
	    ＮＵＬＬの記述を、アルファベット入力モード(Alpha)、変換入力モード
	  (HenkanNyuryoku) で行うと、アプリケーションによっては、モード表示文
	  字列が、表示されなくなることがあります。アルファベット入力モード、
	  変換入力モードではＮＵＬＬの記述は避けた方が良いでしょう。

	┏━━━━━━━━┯━━━━━┯━━━━━━━━━━━━━━━━━━┓
	┃  指定          │デフォルト│            説明                    ┃
        ┣━━━━━━━━┿━━━━━┿━━━━━━━━━━━━━━━━━━┫
        ┃Alpha           │          │アルファベット入力モード            ┃
        ┠────────┼─────┼──────────────────┨
        ┃HenkanNyuryoku  │  ［あ］  │変換入力モード                      ┃
        ┠────────┼─────┼──────────────────┨
        ┃ZenHiraKakutei  │確［あ］  │全角ひらがな確定入力モード          ┃
        ┠────────┼─────┼──────────────────┨
        ┃ZenKataKakutei  │確［ア］  │全角カタカナ確定入力モード          ┃
        ┠────────┼─────┼──────────────────┨
        ┃HanKataKakutei  │確［ァ］  │半角カタカナ確定入力モード          ┃
        ┠────────┼─────┼──────────────────┨
        ┃ZenAlphaKakutei │確［ａ］  │全角アルファベット確定入力モード    ┃
        ┠────────┼─────┼──────────────────┨
        ┃HanAlphaKakutei │確［a ］  │半角アルファベット確定入力モード    ┃
        ┠────────┼─────┼──────────────────┨
        ┃Hex             │  ［16進］│16進コード入力モード                ┃
        ┠────────┼─────┼──────────────────┨
        ┃Bushu           │  ［部首］│部首入力状態                        ┃
        ┠────────┼─────┼──────────────────┨
        ┃Kigo            │  ［記号］│記号一覧表示状態                    ┃
        ┠────────┼─────┼──────────────────┨
        ┃Mojishu         │  ［字種］│文字種変換状態                      ┃
        ┠────────┼─────┼──────────────────┨
        ┃Tankouho        │  ［漢字］│単一候補表示状態                    ┃
        ┠────────┼─────┼──────────────────┨
        ┃Ichiran         │  ［一覧］│候補一覧表示状態                    ┃
        ┠────────┼─────┼──────────────────┨
        ┃HanKataHenkan   │  ［ァ］  │半角カタカナ変換入力モード          ┃
        ┠────────┼─────┼──────────────────┨
        ┃ZenAlphaHenkan  │  ［ａ］  │全角アルファベット変換入力モード    ┃
        ┠────────┼─────┼──────────────────┨
        ┃HanAlphaHenkan  │  ［a ］  │半角アルファベット変換入力モード    ┃
        ┠────────┼─────┼──────────────────┨
        ┃Extend          │  ［拡張］│拡張機能選択状態                    ┃
        ┠────────┼─────┼──────────────────┨
        ┃Russian         │  ［ロ］  │ロシア文字選択状態                  ┃
        ┠────────┼─────┼──────────────────┨
        ┃Greek           │  ［ギ］  │ギリシア文字選択状態                ┃
        ┠────────┼─────┼──────────────────┨
        ┃Line            │  ［罫線］│罫線選択状態                        ┃
        ┠────────┼─────┼──────────────────┨
        ┃ChangingServer  │  ［変更］│サーバ変更状態                      ┃
        ┠────────┼─────┼──────────────────┨
        ┃DeleteDic       │  ［削除］│単語削除状態                        ┃
        ┠────────┼─────┼──────────────────┨
        ┃Touroku         │  ［登録］│単語登録モード                      ┃
        ┠────────┼─────┼──────────────────┨
        ┃TourokuHinshi   │  ［品詞］│単語登録モードの品詞選択状態        ┃
        ┠────────┼─────┼──────────────────┨
        ┃TourokuDic      │  ［辞書］│単語登録モードの辞書選択状態        ┃
        ┠────────┼─────┼──────────────────┨
        ┃QuotedInsert    │  ［ｑ］  │引用入力モード                      ┃
        ┠────────┼─────┼──────────────────┨
        ┃BubunMuhenkan   │  ［編集］│部分無変換状態                      ┃
        ┠────────┼─────┼──────────────────┨
        ┃MountDic        │  ［辞書］│辞書のマウント、アンマウント状態    ┃
        ┗━━━━━━━━┷━━━━━┷━━━━━━━━━━━━━━━━━━┛
          (大文字・小文字の区別はありません)

３．６   ローマ字かな変換テーブルのカスタマイズ

	    ローマ字かな変換に関して、例えば「こんにちは」と入力するのに
	  "konnichiha" と入力するのに慣れている場合と "konnnichiha" と入力す
	  る("n" の回数が違います)のに慣れている場合があります。
	    このようにローマ字かな変換だけをとってみてもユーザ毎の好みは色々
	  あります。
	    ローマ字かな変換に関しては初期化(カスタマイズ)ファイルにより好
	  みのテーブルを指定することができます。また、標準的に用意しているテ
	  ーブルに好みのものが無い場合には自分でローマ字かな変換テーブルを作
	  成することもできます。

３．６．１   標準的に提供するローマ字かな変換テーブル

	    標準的に提供されるローマ字かな変換テーブルとしては以下のものがあ
	  ります。これらのテーブルは /usr/local/lib/iroha/dic の下にファイル
	  の形で存在します。
        ┏━━━━━━━━┯━━━━━━━━━━━━━━━━━━━━━━━━┓
        ┃    辞書名      │                備考                            ┃
        ┣━━━━━━━━┿━━━━━━━━━━━━━━━━━━━━━━━━┫
        ┃  default.rdic  │デフォルトのローマ字かな変換テーブル            ┃
        ┠────────┼────────────────────────┨
        ┃  jdaemon.rdic  │旧システムと互換のローマ字かな変換テーブル      ┃
        ┠────────┼────────────────────────┨
        ┃  just.rdic     │「ん」を“nn”で、小さいひらがなを“l××”で入 ┃
        ┃                │力するためのローマ字かな変換テーブル            ┃
        ┗━━━━━━━━┷━━━━━━━━━━━━━━━━━━━━━━━━┛
	    デフォルトでは default.rdic が選ばれますが、その他のローマ字かな
	  変換テーブルを利用する場合には初期化(カスタマイズ)ファイルにて次
	  のような行を加えます。

		romkanaTable      "jdaemon.rdic"
		(jdaemon.rdicを利用する場合)

	    指定した名前はファイル名とみなされサーチされます。サーチは次の順
	  番で行われます。

       (1) カレントディレクトリ
	    カレントディレクトリで指定されたファイルをサーチします。
       (2) ホームディレクトリ
	    ホームディレクトリで指定されたファイルをサーチします。
       (3) 辞書ディレクトリ
	    /usr/local/lib/iroha/dic で指定されたファイルをサーチします。
	    いずれのディレクトリへもローマ字かな変換テーブルが存在しない場合
	  にはローマ字かな変換入力が行えませんのでご注意下さい。

３．６．２   自分自身のローマ字かな変換テーブルの作成のしかた

	    システムで提供されているローマ字かな変換テーブルでは満足できない
	  場合にはローマ字かな変換テーブルを記述することになります。
	    カスタマイズする場合には、ローマ字かな変換テーブルのソースファイ
	  ル /usr/local/lib/iroha/sample/src/default.rdef をコピーして書き替
	  えるのが簡単です。
	    ローマ字かな変換テーブルは１行にローマ字とそれに対応する『かな』
	  とが記述されているテーブルです。次のような内容になっています。
          ┌──────────┐
          │  ａ    あ          │
          │  ｉ    い          │
          │  ｕ    う          │
          │  ｅ    え          │
          │  ｏ    お          │
          │  ｋａ  か          │
          │  ｋｉ  き          │
          │        ・・・・・  │
          └──────────┘

	    特殊な文字を指定するときのために“＼”(バックスラッシュ)をエス
	  ケープ文字として使用することができます。特殊な文字としては、スペース
	  文字、"#", "\" があります。

	《例》  バックスラッシュを入力した時に￥が入力されるようにする場合。
		＼＼	￥

	テーブルに記述されている規則の用いられ方
	    この表を基にローマ字かな変換が行われますが、表で記述された変換規
	  則が最長一致法の原則で使用されます。例えば「べんりな」と入力する時
	  は次のようなテーブルの参照がなされます。
        ┏━━┯━━━━┯━━━━━━━━━━━━━━━━━━━━━━━━━┓
        ┃入力│表示    │                備考                              ┃
        ┣━━┿━━━━┿━━━━━━━━━━━━━━━━━━━━━━━━━┫
        ┃ben │ベｎ    │“ｎ”についてはもっと長い規則である“na”のような┃
        ┃    │        │ものが存在するのでローマ字のままエコーされます。  ┃
        ┠──┼────┼─────────────────────────┨
        ┃r   │べんｒ  │“nr”．で始まる規則がないので“ｎ”→「ん」の規則┃
        ┃    │        │が適用されます。                                  ┃
        ┠──┼────┼─────────────────────────┨
        ┃in  │べんりｎ│                                                  ┃
        ┠──┼────┼─────────────────────────┨
        ┃a   │べんりな│“na”で始まる規則が“na”→「な」だけであるのでこ┃
        ┃    │        │の規則が適用されます。                            ┃
        ┗━━┷━━━━┷━━━━━━━━━━━━━━━━━━━━━━━━━┛
	    このようにテーブルに存在する規則は最長一致法の原則で用いられます。

	例外
	    ただし、以下についてはテーブルを参照しての変換に加えて例外的にロ
	  ーマ字かな変換ロジックのプログラムで指定された変換が行われます。
	・促音の処理
	    ローマ字かな変換テーブルに存在しないような子音の繰り返し(ttのよ
	  うな場合)があった場合はその子音に一つ目の文字が「っ」に変換される
	  ものとします。ただし、"n" が２回繰り返された場合にはこのことは行わ
	  れません。

	ローマ字かな変換テーブルのコンパイル
	    ローマ字かな変換テーブルはシステムが読み易いバイナリ形式に変換し
	  なければなりません。すなわち上記のようなテキスト形式のファイルをバ
	  イナリ形式にコンパイルする必要があります。
	    ローマ字かな変換テーブルをテキスト形式からバイナリ形式にコンパイ
	  ルするには次のように行って下さい。

		mkromdic      ファイル名 <return>

	    mkromdic を行うと、xx.rdic ファイルができます。
	    システムで提供されるローマ字かな変換辞書のソースファイルが
	  /usr/local/lib/iroha/sample/src の下に *.rdef として存在しますので
	  参考にして下さい。

	※バイナリ形式のローマ字かな変換テーブルは dpromdic コマンドによりテ
	  キスト形式に戻すことが可能です。詳しくは dpromdic のマニュアルペー
	  ジを参照して下さい。
