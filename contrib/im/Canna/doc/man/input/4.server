４かな漢字変換サーバと辞書

４．１   かな漢字変換サーバ

       (1) サーバクライアントモデル
	    EWS-UX/V で用いられている日本語入力システムではサーバクライアント
	  モデルをベースにしています。つまり、かな漢字変換が行われる時は漢字
	  に変換したい読みをプロセス間通信でかな漢字変換サーバに送り、かな漢
	  字変換サーバでかな漢字変換辞書を元に漢字に変換した後に変換した結果
	  をアプリケーションに返すことによりかな漢字変換を成し遂げています。
	    すなわち、日本語入力デーモンや日本語入力を行うアプリケーションが
	  かな漢字変換を行う時には、それらのプログラムが直接かな漢字変換辞書
	  をアクセスしてかな漢字変換を行うのではなく、かな漢字変換サーバを介
	  して漢字に変換しています。
	    このように、EWS-UX/V ではサーバクライアントモデルをベースとしたか
	  な漢字変換が採用されています。

       (2) かな漢字変換サーバの指定
	    日本語入力を利用するプログラムとかな漢字変換サーバとの間はソケッ
	  トを用いたプロセス間通信が行われます。このため、日本語入力を利用す
	  るプログラムと、かな漢字変換サーバとは同一の計算機上に存在する必要
	  はなく、かな漢字変換サーバとして利用するサーバを、ネットワーク上の
	  任意の計算機から自由に選択して使用することができます。
	    例えば、ディスク容量がたくさんあり、ＣＰＵもある程度の性能を持つ
	  計算機に辞書を置き、かな漢字変換サーバを走らせておけば、ネットワー
	  ク上のどのＥＷＳ上からでも高性能のかな漢字変換エンジンを利用するこ
	  とが可能となります。ネットワーク上のどのマシンを利用している時も、
	  常に同一のかな漢字変換サーバを利用することにより、新たに登録した単
	  語や頻度情報を一元管理することができます。

	・IROHAHOST
	    どの計算機で動作しているかな漢字変換サーバを用いるかを指定するに
	  は環境変数 IROHAHOST で、利用したいかな変換サーバが動作している計算
	  機のホスト名を指定します。例えばホスト名が machine1 という計算機で
	  動いているかな漢字変換サーバを利用する場合には .login ファイルの最
	  初に次の行を入れることになります。

	(例)
		setenv IROHAHOST machine1

	    かな漢字変換サーバは、デフォルトでは同一計算機上で動作しているも
	  のが使われます。環境変数 IROHAHOST を設定することにより他の計算機上
	  で動作しているかな漢字変換サーバを用いるようになります。

	・/usr/local/lib/iroha/irohahost
	    環境変数 IROHAHOST が設定されていないときには通常は同一計算機上の
	  かな漢字変換サーバが使われますが、/usr/local/lib/iroha/irohahost と
	  いうファイルに他の計算機のホスト名が記述されている場合には
	  /usr/local/lib/iroha/irohahost にて示される計算機上のかな漢字変換サ
	  ーバが用いられるようになります。すなわち、
	  /usr/local/lib/iroha/irohahost に他の計算機のホスト名を記述しておく
	  と、その計算機を利用しているユーザは環境変数 IROHAHOST を用いて明示
	  的にかな漢字変換サーバを指定している場合以外は、
	  /usr/local/lib/iroha/irohahost にて指定されるサーバを用いるようにす
	  ることができます。
	    例えばディスクレスマシンのように、システム資源が足りない場合等は、
	  /usr/local/lib/iroha/irohahost ファイルにディスクレスサーバマシン等
	  のホスト名を記述しておくことにより、他の計算機のかな漢字変換サーバ
	  を利用するように記述しておいたほうが良いでしょう。

	(例)
		% cat /usr/local/lib/iroha/irohahost <return>
		machine1
		%

	    /usr/local/lib/iroha/irohahost にて他の計算機を指定することにより、
	  同一計算機上のかな漢字変換サーバは使われないようになります。その場
	  合には、かな漢字変換サーバの起動は不要となりますので、/etc/rc ファ
	  イルを書き換えて irohaserver が起動しないようにしておくと良いでしょ
	  う。
	  また、この場合、さらにかな漢字変換辞書等が不要となります。以下のフ
	  ァイル又はディレクトリをその計算機のハードディスクから削除すること
	  が可能となります。

		/usr/local/lib/iroha/dic/iroha
		/usr/local/lib/iroha/dic/user
		/usr/local/lib/iroha/irohaserver
		/usr/local/lib/iroha/irohakill
		/usr/local/bin/crxdic
		/usr/local/bin/dpxdic
		/usr/local/bin/forsort
		/usr/local/bin/mergeword
		/usr/local/bin/mkbindic
		/usr/local/bin/splitword

       (3) irohaserver の起動
	    日本語機能のかな漢字変換は、かな漢字変換サーバ irohaserver が行っ
	  ています。
	  かな漢字変換の際、辞書は irohaserver を介してアクセスします。何らか
	  の障害により irohaserver が異常終了してしまった場合は、ロックファイ
	  ルが残り irohaserver が再起動できなくなることがあります。この場合は
	  ロックファイルを消して irohaserver を立ち上げ直して下さい。

       (4) irohaserver のアクセス制御
	    irohaserver にアクセスできるホストとユーザを指定することができま
	  す。
	・/etc/hosts.iroha
	    /etc/hosts.iroha というファイルを作成することで、同一のホスト上の
	  irohaserver が接続要求を受け付けるホストの制限を付けることができま
	  す。
	    irohaserver は同一のホスト、又は /etc/hosts.iroha に登録されたホ
	  ストと登録されたユーザに対してのみ接続要求を受け付けます。
	  /etc/hosts.iroha が存在しないか、ファイルの長さが 0 の場合は全ての
	  ホストが irohaserver にアクセスすることができます。
	    ホスト名のあとにコロン ":" を書き、その後にユーザ名を指定します。
	  多数のユーザを指定する場合には、ユーザ名とユーザ名の間にはカンマ
	  "," を書きます。ホスト名のみが指定された場合は、そのホストのユーザ
	  全員のアクセスを受け付けます。
	  irohaserver が存在するホストの名前は、"unix"と記述して下さい。
	  /etc/hosts.iroha ファイルが存在する場合、そのファイルの中に "unix"
	  という記述がないと、そのホスト自身の irohaserver にアクセスすること
	  ができなくなります。

	(例)
		pbg3：hanafusa,root
		pbg1：
		pbg4
		unix

	・ishost
	    ishost(1M) でアクセス可能なホスト名とユーザ名のリスト(アクセスコ
	  ントロールリスト)を参照することができます。

４．２   辞書

       (1) 辞書と辞書ファイル
	    かな漢字変換に用いる「辞書」は、かなを漢字に変換するためのデータ
	  を格納しているものです。「辞書」が納めてあるファイルを「辞書ファイ
	  ル」と呼びます。「辞書ファイル」には１個だけの「辞書」が納められて
	  いる場合もあれば、複数の「辞書」が納められている場合もあります。
	  「辞書ファイル」にはテキスト形式のものとバイナリ形式のものがありま
	  す。システムで最初から提供されている辞書をシステム辞書と呼びます。

       (2) システム辞書のディレクトリ
	    かな漢字変換辞書へのアクセスはかな漢字変換サーバだけが行います。
	  かな漢字変換辞書はかな漢字変換サーバが動作している計算機上の 
	  /usr/local/lib/iroha/dic の下にあります。

	・辞書ホームディレクトリ
	    /usr/local/lib/iroha/dic を辞書ホームディレクトリと呼びます。
	  辞書ホームディレクトリの下にはさらにいくつかのディレクトリがありま
	  す。実際の辞書ファイルはそれらのディレクトリの下にあります。辞書ホ
	  ームディレクトリの下のディレクトリはかな漢字変換のユーザ毎に使用す
	  る辞書を分けて管理するための区分になっています。
	・システム辞書ファイル
	    /usr/local/lib/iroha/dic の下にあるディレクトリのうち、iroha と
          いう名前のディレクトリだけは特別で、かな漢字変換を利用するすべての
	  ユーザに共通に使用されます。このディレクトリの下にある辞書ファイル
	  のことをシステム辞書ファイルと呼びます。システム辞書ファイルには以
	  下のものがあります。
		iroha.d
		fuzokugo.d
		hojomwd.t
		hojoswd.t
	・ユーザ辞書ファイル
	    かな漢字変換利用者はシステム辞書ファイル以外に各自で用意した辞書
	  ファイルを使うことができます。各自で用意した辞書ファイルは辞書ホー
	  ムディレクトリの下にログイン名と同名のディレクトリを作成してその下
	  に置いておきます。単語登録の際、かな漢字変換サーバが辞書ファイルに
	  対して書き込みを行います。かな漢字変換サーバはオーナ／グループが
	  bin/bin で動作していますので、辞書ファイルを作成する時はそのファイ
	  ルのグループを bin にしてグループに対する書き込み権を開放しておいて
	  下さい。
	    例として辞書ホームディレクトリの下に user というディレクトリを準
	  備しました。各自でディレクトリを作成する時に参考にして下さい。user
	  の下には以下の辞書ファイルがあります。
		chimei.t
		katakana.t
		software.t
		user.t
		necgaiji.t
	・辞書サーチパス
	    かな漢字変換に用いる辞書は、辞書ホームディレクトリの下のログイン
	  名と同名のディレクトリの下の辞書をまず用いようとし、次にシステム辞
	  書ファイルの中から指定された辞書を探してきて用います。この辞書を探し
	  出す順序のことを辞書サーチパスと言います。

       (3) 辞書ファイルの形式
	    かな漢字変換辞書ファイルには次の２つの形式があります。
	・テキスト形式
	    通常のテキスト形式の辞書ファイルです。単語登録等はこの辞書ファイ
	  ルに格納されている辞書に対して行われます。テキスト形式ですので通常
	  のエディタでメンテナンスすることもできます。
	・バイナリ形式
	    辞書の読み込みが高速になるような形式に変換された辞書ファイルです。
	  単語の追加登録は行えません。辞書ユーティリティツールを使ってテキス
	  ト形式とバイナリ形式を相互変換することが可能です。また、複数のバイ
	  ナリ形式の辞書ファイルを cat(1) または dicar(1) で１つのバイナリ形
	  式辞書ファイルに結合することができます。dicar(1) についてはマニュア
	  ルページを参照して下さい。
	    辞書ユーティリティツールを使ってテキスト形式辞書ファイルをバイナ
	  リ形式に変換した場合、バイナリ形式辞書ファイルは、内部にもとのテキ
	  スト形式辞書ファイルのファイル名を保持しておきます。cat(1)で単一の
	  バイナリ形式辞書ファイルに結合した場合もこのテキスト形式辞書ファイ
	  ル名は失われません。cat(1) で辞書を結合した場合、そのバイナリ辞書フ
	  ァイルに含まれている辞書を区別するのにテキスト形式辞書ファイル名が
	  用いられます。

       (4) 辞書目録(dics.dir)
	    辞書ホームディレクトリ下の各ディレクトリの下にどのような辞書が存
	  在するかは各ディレクトリの下の dics.dir という名前のファイルに記述
	  されています。dics.dir の記述は以下のようになります。

		#
		#  システム辞書
		#
		iroha.d(iroha.mwd)          -iroha-
		iroha.d(yuubin.mwd)         -yuubin-
		iroha.d(bushu.mwd)          -bushu-
		fuzokugo.d(fuzokugo.swd)    -fuzokugo-
		hojomwd.t(.mwd)             -hojomwd-
		hojoswd.t(.swd)             -hojoswd-

	    dics.dirでは１行に１つの辞書についての記述を行います。まず、一番
	  左に辞書ファイル名を記述します。次に(  )に挟まれて記述されるのが、
	  その辞書ファイルの中に存在する辞書のテキスト形式辞書ファイル名です。
	  右側にハイフン(-)で囲って記述されているのがその辞書につけた辞書名
	  です。この辞書名が辞書の指定に用いられます。辞書名はファイル名等と
	  全く独立に付けることができます。(  )内に記述されるテキスト形式辞
	  書ファイル名は、その辞書をバイナリ形式に変換する直前のテキスト形式
	  辞書ファイルの時のファイル名です。
	    dics.dir で "#" から改行まではコメントとして扱われます。

       (5) テキスト形式辞書の作り方
	    １行に読み、品詞、単語を空白又はタブで区切って記述します。単語は
	  空白又はタブで区切れば複数記述することが出来ます。
	    辞書ファイル名は、バイナリ辞書と区別するためにxxx.t という名前に
	  して下さい。

		読み        品詞    単語    ［単語］…
	(例)
		あぷ	    #T35  アプリケーション  アプリケーションプログラム
		お	    #KJ	  お  御
		かなかん    #T30  かな漢字変換
		でふぉると  #T15  デフォルト
		ふじいえ    #JN	  藤家

	    品詞を表す記号については付録Ｇを参照して下さい。

       (6) バイナリ形式辞書の作り方
	    テキスト形式辞書ファイルをバイナリ形式辞書ファイルに変換するには、
	  mkbindic(1) を使って行います。
	    xxx.t というテキスト辞書をバイナリ形式に変換すると、xxx.mwd とい
	  う名前が dics.dir の中で(  )の中に記述する辞書識別名になります。

	(例)
		% mkbindic  foo.t  <return>

	    mkbindic(1) を実行しますと、読みをキーとしてテキスト形式辞書ファ
	  イルを辞書順にソートし、それをバイナリ化し、xxx.d (例では、foo.d )
	  というバイナリ形式辞書を作成します。
	    複数の辞書ファイルをまとめて１つのバイナリ形式辞書にすることがで
	  きます。

	(例１)
		% cat foo.d >> bar.d

	(例２)
		% dicar -r bar.d foo.d

       (7) バイナリ形式辞書ファイルとテキスト形式辞書ファイルの相互変換
	    辞書はテキスト形式でもバイナリ形式でも使用することができますが、
	  単語登録用ユーザ辞書として使えるのはテキスト形式だけです。
	    テキスト形式とバイナリ形式は、相互に変換することができます。バイ
	  ナリ形式への変換は mkbindic(1) 、バイナリ形式からテキスト形式への変
	  換は dpbindic(1) を使います。mkbindic(1) とdpbindic(1) についての詳
	  細は、マニュアルページを参照して下さい。

       (8) ユーザの個人用辞書の設定
	    単語登録を行うには、カスタマイズ機能によりユーザ辞書の設定を行う
	  必要があります。カスタマイズ機能についての詳細は3 カスタマイズの
	  方法を参照して下さい。

	    各ユーザのユーザ辞書の作成は以下のように行います。
	(a) .irohaの作成
	    ホームディレクトリに .iroha というファイルを作成し、以下のように
	  書き込んで下さい。filename には辞書名を記述します。最初の２行は基本
	  になる辞書の名前ですので必ず記述して下さい。
	    はじめは /usr/local/lib/iroha/sample の下の default.iroha という
	  ファイルをコピーして用いると良いでしょう。

	(例)
		dictionary    "iroha"
		dictionary    "fuzokugo"
		userdic       "dicname"

	    userdic に "user" を指定した場合、マウントに失敗してもワーニン
	  グメッセージを出力しません。

	(b) 辞書ファイルの作成
	    mkuserdic(1) あるいは uploaddic(1) によりテキスト形式辞書ファイル
	  を作成します。
	    これらのコマンドにより辞書ディレクトリおよび辞書ファイルが作成さ
	  れ、必要に応じて dics.dir ファイルが更新あるいは作成されます。

	(例)
		% mkuserdic  dicname  <return>

	    mkuserdic(1) や uploaddic(1) などのコマンドを使用しないで辞書ファ
	  イルを作成する場合には、以下の手順で作成してください。

	1)  辞書ディレクトリの作成
	    /usr/local/lib/iroha/dic の下に自分のユーザ名のディレクトリを作り
	  ます。
	2)  辞書ファイルの作成
	    そのディレクトリに filename.t というファイルを作ります。filename
	  は任意の名前で、これを dics.dir に書き込みます。登録はテキストファ
	  イルに行いますので、必ず .t という拡張子を付けて下さい。ファイルに
	  は何も書き込む必要はありません。
	    このファイルのグループは bin とし、グループに対する書き込み権を許
	  可しておいて下さい。これを行わないと単語登録が反映されない場合があ
	  ります。
	3)  dics.dir の作成
	    辞書ファイルと同じディレクトリに dics.dir というファイルを作って
	  下さい。
	    dics.dir はそのディレクトリ下にある辞書の一覧を保持しているファイ
	  ルです。このファイルには以下のように辞書ファイルの名前と辞書の種類
	  と辞書名を書き込みます。

	(例)
		filename.t  (.mwd)          -dicname-
                ↑辞書ファイル名 ↑              ↑辞書名
                                 │
	          自立語であることを指定

       (9) Ｗｎｎ対応
	    今までかな漢字変換システムとしてＷｎｎを使用してきたユーザに
	  本日本語システムを有効に御使用していただくための簡易ツール
	  を用意しました。
	    おそらく、Ｗｎｎを使い込んできたユーザは自分なりの辞書を持って
	  いることでしょう。そこでＷｎｎユーザはＷｎｎでの使い慣れた辞書を
	  iroha の形式に変換することにより、今まで通りのかな漢字
	  変換ができます。このために、Ｗｎｎのテキスト形式辞書を iroha の
	  テキスト形式辞書に変換するコマンド wtoi(1) があります。
	    また、iroha の日本語システムとＷｎｎの両方を使用しているユーザ
	  は iroha での辞書をＷｎｎと共有することができれば便利でしょう。
	  そのために iroha のテキスト形式辞書をＷｎｎの形式に変換するコマ
	  ンド itow(1) があります。wtoi(1) と itow(1) によりＷｎｎと irohaの
	  間でかな漢字変換辞書を相互に利用することができます。

	  (例)
		iroha の辞書から Wnn の辞書を作成します。
		% itow iroha.t > iroha.txt <return>
