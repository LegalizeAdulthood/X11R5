２．３モードが移行するときの処理概要

  かな漢字変換はいくつかのモードをキー入力によって移行しながら日本語を
  入力する処理である。

  ここではモード移行の概要を示し、次に具体的な例を取りあげ、モードが移
  行するときの流について述べる。

  (1)モードの移行の概
  要各モードの移行の概念図を以下に示す。uiContext

                        ┌──────┐
                        │     :      │
                        ├──────┤          モード構造体
                        │current_mode│───→┌──────┐
                        ├──────┤        │ simplefunc │
                        │     :      │        ├──────┤
  callback構造体        ├──────┤        │キーテーブル│
  ┌─────┐←───│     cb     │        ├──────┤
  │          │        ├──────┤        │   フラグ   │
  │          │        │            │        ├──────┤
  └─────┘        │     :      │        │関数テーブル│
                        ├──────┤        └──────┘
                        │   modec    │──┐
                        └──────┘    │
                                            │    yomiContext
                                            └→┌──────┐
                                                │     :      │
                                                │     :      │
                                                ├──────┤
                                                │    next    │
                                                ├──────┤
                                                │     :      │
      モ−ドのｐｕｓｈ                          └──────┘  ／＼
        ┌┐                                                      ││
        ││                                                      ││
  ───┼┼───────────────────────────┼┼───
        ││                                                      └┘
        ＼／                                                 モ−ドのｐｏｐ




                     uiContext
                   ┌──────┐                    カレントのモ−ド構造体
                   │     :      │                        に入れ替わる
                   ├──────┤          構造体            直前の構造体
                   │current_mode│─→┌──────┐  ┌─→┌──────┐
                   ├──────┤    │ simplefunc │  │    │            │
                   │     :      │    ├──────┤  │    │            │
   callback構造体  ├──────┤    │キーテーブル│  │    │            │
   ┌─────┐←│     cb     │    ├──────┤  │    │            │
   │    :     │  ├──────┤    │   フラグ   │  │    │            │
   ├─────┤  │            │    ├──────┤  │    │            │
   │   next   │┐│     :      │    │関数テーブル│  │    │            │
   ├─────┤│├──────┤    └──────┘  │    └──────┘
   │    :     │││   modec    │─┐                  │
   └─────┘│└──────┘  │                  │
 ┌───────┘                  │    henkanContext │      yomiContext
 │  チェ−ンされる                  └→┌──────┐│┌→┌──────┐
 └→┌─────┐                      │     :      │││  │     :      │
     │    :     │                      ├──────┤││  │     :      │
     ├─────┤                      │  prevMode  │┘│  ├──────┤
     │   next   │                      ├──────┤  │  │    next    │
     ├─────┤                      │    next    │─┘  ├──────┤
     │    :     │                      ├──────┤      │     :      │
     └─────┘                      │            │      └──────┘
                                         └──────┘
                                                        各モ−ドのContext が
                                                        チェ−ンされる

  ──  で囲まれた構造体がｐｕｓｈされた時、新たにチェ−ンされるもの

 (2)モードが移行するときの処理の流れ

    例として、読みモードから単候補モードに移行する場合と、その逆の場合
    をと具体的な関数名をあげながら説明する。

   <1>何も入力されていない状態(Ｅｍｐｔｙモード）

                      uiContext
                    ┌──────┐
                    │     :      │
                    ├──────┤          empty_mode
                    │current_mode│───→┌──────┐
                    ├──────┤        │ simplefunc │
                    │     :      │        ├──────┤
                    ├──────┤        │キーテーブル│
                    │     cb     │        ├──────┤
                    ├──────┤        │   フラグ   │
                    │            │        ├──────┤
                    │     :      │        │関数テーブル│
                    ├──────┤        └──────┘
                    │   modec    │──┐
                    └──────┘    │
                                        │    yomiContext
                                        └→┌──────┐
                                            │     :      │
                                            │     :      │
                                            ├──────┤
                                            │    next    │
                                            ├──────┤
                                            │     :      │
                                            └──────┘

   <2>読みを入力するとempty.c中の関数EmptyYomiInsertが呼ばれここでカレ
      ントモ−ドが読みモ−ドに移行する。

                          uiContext
                        ┌──────┐
                        │     :      │
                        ├──────┤          yomi_mode
                        │current_mode│───→┌──────┐
                        ├──────┤        │ simplefunc │
                        │     :      │        ├──────┤
  callback構造体        ├──────┤        │キーテーブル│
  ┌─────┐←───│     cb     │        ├──────┤
  │          │        ├──────┤        │   フラグ   │
  │          │        │            │        ├──────┤
  └─────┘        │     :      │        │関数テーブル│
                        ├──────┤        └──────┘
                        │   modec    │──┐
                        └──────┘    │
                                            │    yomiContext
                                            └→┌──────┐
                                                │     :      │
                                                │     :      │
                                                ├──────┤
                                                │    next    │
                                                ├──────┤
                                                │     :      │
                                                └──────┘

    uiContext中のmodocが指しているもの(Context)とは、各モ−ドにおける
    状態の保持の為の構造体である。

    例えば、yomiContext構造体には入力された読みの情報、henkanContext構
    造体には変換結果や文節の区切りなどである。

   <3>読み入力後、変換キーを押すとyomi_modeのキーテーブルが参照され
     romaji.c中の関数YomiHenkanが呼ばれる。その中でhenkan.c中の関数
     pushHenkanModeが呼ばれカレントモードが単候補モ−ドに移行する。

                       uiContext
                    ┌──────┐
                    │     :      │
                    ├──────┤          tankouho_mode
                    │current_mode│───→┌──────┐
                    ├──────┤        │ simplefunc │
                    │     :      │        ├──────┤
  callback構造体    ├──────┤        │キーテーブル│
  ┌─────┐←─│     cb     │        ├──────┤
  │    :     │    ├──────┤        │   フラグ   │
  ├─────┤    │            │        ├──────┤
  │   next   │┐  │     :      │        │関数テーブル│
  ├─────┤│  ├──────┤        └──────┘
  │    :     ││  │   modec    │┐
  └─────┘│  └──────┘│
   変換モード用 │                  │
                │                  │
┌───────┘                  │    henkanContext         yomiContext
│  チェ−ンされる                  └→┌──────┐  ┌→┌──────┐
└→┌─────┐                      │     :      │  │  │     :      │
    │    :     │                      │     :      │  │  │     :      │
    ├─────┤                      ├──────┤  │  ├──────┤
    │   next   │                      │    next    │─┘  │    next    │
    ├─────┤                      ├──────┤      ├──────┤
    │    :     │                      │     :      │      │     :      │
    └─────┘                      └──────┘      └──────┘
    読みモード用

   <4>移行後、さらに関数YomiHenkanからhenkan.c中の関数henkanが呼ばれ実
     際に読みが漢字に変換される。

   <5>単候補モードにおいて確定キーを押すとtankouho_modeのキーテーブル
     が参照されhenkan.c中の関数Tankakuteiが呼ばれる。ここで全ての文節
     が確定されたのち、関数pophenkanModeが呼ばれhenkanContextのnextが
     指すyomiContextをUiContextのmodecに付け替え、さらにpushHenkanMode
     で待避させていたempty_modeのポインタをcurrent_modeにもどすことに
     より単候補モ−ドをポップしEmptyモ−ドに移行する。

                        uiContext
                        ┌──────┐
                        │     :      │
                        ├──────┤          empty_mode
                        │current_mode│───→┌───────┐
                        ├──────┤        │モード処理関数│
                        │     :      │        ├───────┤
  callback構造体        ├──────┤        │ キーテーブル │
    ┌────┐←───│     cb     │        ├───────┤
    │        │        ├──────┤        │    フラグ    │
    ├────┤        │            │        ├───────┤
    │        │        │     :      │        │ 関数テーブル │
    ├────┤        ├──────┤        └───────┘
    │        │        │   modec    │──┐
    └────┘        └──────┘    │
                                            │    yomiContext
                                            └→┌──────┐
                                                │     :      │
                                                │     :      │
                                                ├──────┤
                                                │    next    │
                                                ├──────┤
                                                │     :      │
                                                └──────┘
