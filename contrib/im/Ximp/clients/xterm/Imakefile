XCOMM $XConsortium: Imakefile,v 1.50 91/07/27 13:55:09 rws Exp $
XCOMM
XCOMM                         Attention xterm porters
XCOMM
XCOMM
XCOMM Xterm assumes that bcopy can handle overlapping arguments.  If your
XCOMM bcopy (or memcpy) cannot, write a routine called bcopy and link it in
XCOMM or add -Dbcopy=mybcopy to the DEFINES list below.
XCOMM

/*
 * add -DWTMP and -DLASTLOG if you want them; make sure that bcopy can
 * handle overlapping copies before using it.
 */
#ifdef SetTtyGroup			/* turn on in config/machine.cf */
   TTYGROUPDEF = -DUSE_TTY_GROUP
#endif
#ifdef UsePUCCPtyd			/* turn on in config/site.def */
    PUCCPTYDDEF = -DPUCC_PTYD		/* does not need to be setuid */
         PTYLIB = -lpucc
#endif

   MAIN_DEFINES = -DUTMP $(TTYGROUPDEF) $(PUCCPTYDDEF)
   MISC_DEFINES = /* -DALLOWLOGFILEEXEC */
        DEFINES = -DI18N -DXINPUTMETHOD -DSTATUSLINE

          SRCS1 = button.c charproc.c cursor.c data.c input.c \
		  main.c menu.c misc.c screen.c scrollbar.c tabs.c \
		  TekPrsTbl.c Tekproc.c util.c VTPrsTbl.c
          OBJS1 = main.o input.o charproc.o cursor.o util.o tabs.o \
		  screen.o scrollbar.o button.o Tekproc.o misc.o \
		  VTPrsTbl.o TekPrsTbl.o data.o menu.o
          SRCS2 = resize.c
          OBJS2 = resize.o
           SRCS = $(SRCS1) $(SRCS2)
           OBJS = $(OBJS1) $(OBJS2)
       PROGRAMS = resize xterm
       DEPLIBS1 = XawClientDepLibs
       DEPLIBS2 = 
       PROGRAMS = xterm resize

#ifndef TermcapLibrary
#if SystemV && !defined(MacIIArchitecture)
#if defined(CrayArchitecture) || defined(HPArchitecture) || defined(RsArchitecture)
#define TermcapLibrary -lcurses		/* special cases of System V */
#else
#define TermcapLibrary -ltermlib	/* usually in here */
#endif
#else
#define TermcapLibrary -ltermcap	/* bsd puts it here */
#endif
#endif

     TERMCAPLIB = TermcapLibrary

AllTarget($(PROGRAMS))

SpecialObjectRule(main.o,NullParameter,$(MAIN_DEFINES))
SpecialObjectRule(misc.o,NullParameter,$(MISC_DEFINES))
SpecialObjectRule(charproc.o,NullParameter,$(MISC_DEFINES))

#if InstallXtermSetUID
#define ProgramTarget SetUIDProgramTarget
#else
#define ProgramTarget NormalProgramTarget
#endif

ProgramTarget(xterm,$(OBJS1),$(DEPLIBS1),XawClientLibs,$(TERMCAPLIB) $(PTYLIB))
#if InstallXtermSetUID && defined(SunArchitecture) && HasSharedLibraries
#if AlternateUsrLibDir
LDOVERRIDE =  -Bstatic -L$(USRLIBDIR)
#endif
install:: xterm
	MakeDir($(DESTDIR)$(BINDIR))
	$(RM) xterm.inst
	cc -o xterm.inst $(OBJS1) $(LDOPTIONS) $(LDOVERRIDE) -lXaw -lXmu -lXt -lXext -lX11 -Bdynamic $(LDLIBS) $(TERMCAPLIB) $(PTYLIB)
	$(INSTALL) -c $(INSTPGMFLAGS) $(INSTUIDFLAGS) xterm.inst $(DESTDIR)$(BINDIR)/xterm
	$(RM) xterm.inst
#else
#if InstallXtermSetUID
InstallProgramWithFlags(xterm,$(BINDIR),$(INSTUIDFLAGS))
#else
InstallProgramWithFlags(xterm,$(BINDIR),NullParameter)
#endif
#endif

NormalProgramTarget(resize,$(OBJS2),$(DEPLIBS2),NullParameter,$(TERMCAPLIB))
InstallProgramWithFlags(resize,$(BINDIR),NullParameter)

InstallAppDefaults(XTerm)
InstallManPage(xterm,$(MANDIR))
InstallManPage(resize,$(MANDIR))
DependTarget()
