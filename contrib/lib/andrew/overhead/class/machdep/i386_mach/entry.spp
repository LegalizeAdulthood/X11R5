/* ********************************************************************** *\
 *         Copyright IBM Corporation 1988,1991 - All Rights Reserved      *
 *        For full copyright information see:'andrew/config/COPYRITE'     *
\* ********************************************************************** */

	.globl	_class_Lookup
	.data
	.globl	_class_ErrorReturnValue
	.text
	.align	2

/ Sure hope I am not responsible for saving any registers across a call!
0:
	pushl	8(%esp)		/ Move 1st arg over return address & index
	/ index is already in right place as 2nd arg to class_Lookup
	call	_class_Lookup	/ Call class_Lookup.
	addl	$4, %esp	/ Pop argument to class_Lookup.
	orl	%eax, %eax
	jne	1f

	movl	_class_ErrorReturnValue,%eax
	addl	$4,%esp		/ pop index
	leave
	ret

1:	popl	%edx
	movl	(%eax,%edx,4), %eax		/ Get the function pointer to jmp to from memory.
	jmp	*%eax		/ Jump indirect off of scratch register.


#define ClassEntry(n) \
	.align 2; \
	.globl  _ClassEntry/**/n; \
_ClassEntry/**/n: \
        pushl	$n; /* Push index onto stack for later. */ \
        jmp	0b

#include <../common/entrydefs.h>

