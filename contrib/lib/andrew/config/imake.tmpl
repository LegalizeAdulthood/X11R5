/**/# $Id: imake.tmpl,v 1.50 1991/10/02 20:36:52 gk5g Exp $
/**/#==================================================
/**/# Copyright IBM Corporation 1988,1991 - All Rights Reserved
/**/# For full copyright information see:'andrew/config/COPYRITE'     
/**/#==================================================

/**/###################################################
/**/# This Makefile is automatically generated by 
/**/# imake... do not modify or you may lose your 
/**/# changes when imake generates makefiles again.
/**/# Ignore this message if you are not using imake.
/**/###################################################

/**/###################################################
/**/# The following comes from the platform.tmpl
/**/###################################################
#include <platform.tmpl>
/**/###################################################
/**/# Back from platform.tmpl
/**/###################################################

MACROFILE = MacroIncludeFile

.SUFFIXES: .PS .do .o .ih .eh .fwm .snf .rtx .c .s .spp .y .l .ch .mss .fdb .bdf .fb .pcf

#ifdef ConstructMFLAGS
         MFLAGS = -$(MAKEFLAGS)
#endif /* ConstructMFLAGS */

        ALL_INCLUDES = -I. $(LOCALINCLUDES) $(INCLUDES)
        ALL_DEFINES = $(STD_DEFINES) $(DEFINES)
        CFLAGS = $(COMPILERFLAGS) $(CDEBUGFLAGS) $(ALL_INCLUDES) $(ALL_DEFINES)
        TESTING_CFLAGS = -DTESTINGONLYTESTING $(CFLAGS)
        CLASSFLAGS = $(CLASSINCLUDES)
        LDFLAGS = $(SYS_LIBRARIES) $(SYSAUX_LIBRARIES)
        INSTUIDFLAGS = -c -m 4755
#if hp9000s800
        INSTDOFLAGS = -c -m 0555
        INSTLIBFLAGS = -c -m 0775
#else
        INSTLIBFLAGS = -c -m 0664
        INSTDOFLAGS = -c -m 0444
#endif
        INSTINCFLAGS = -c -m 0444
        INSTMANFLAGS = -c -m 0444
        INSTAPPFLAGS = -c -m 0444
        INSTPROGFLAGS = -c -m 0555
        INSTPROGRWFLAGS = -c -m 0755
        INSTCLASSPROGFLAGS = $(INSTPROGFLAGS)

        AFSUTILS = $(BASEDIR)/lib/libafs.a
#ifdef AFS_ENV
#ifdef AFS30_ENV
#ifdef AFS31_ENV
        DESLIB = $(AFSBASEDIR)/lib/libdes.a
        PRSLIB = $(AFSBASEDIR)/lib/afs/libprot.a \
	$(AFSBASEDIR)/lib/libubik.a \
	$(AFSBASEDIR)/lib/afs/libauth.a \
	$(AFSBASEDIR)/lib/librxkad.a \
	$(AFSBASEDIR)/lib/librx.a \
	$(AFSBASEDIR)/lib/liblwp.a \
	$(AFSBASEDIR)/lib/afs/libcom_err.a \
	$(KRBLIB) $(DESLIB) $(AFSUTILS)
#else /* #ifdef AFS31_ENV */
        PRSLIB = $(AFSBASEDIR)/lib/afs/libprot.a \
      	$(AFSBASEDIR)/lib/libubik.a \
      	$(AFSBASEDIR)/lib/librx.a \
      	$(AFSBASEDIR)/lib/afs/libauth.a \
      	$(AFSBASEDIR)/lib/librxkad.a \
      	$(AFSBASEDIR)/lib/liblwp.a \
	$(AFSBASEDIR)/lib/libscrypt.a \
	$(AFSBASEDIR)/lib/afs/libcom_err.a \
	 $(AFSUTILS)
#endif /* #ifdef AFS31_ENV */
#else /* #ifdef AFS30_ENV */
        PRSLIB = 
#endif /* #ifdef AFS30_ENV */
        UTILLIB = $(BASEDIR)/lib/libutil.a \
	$(AFSBASEDIR)/lib/afs/libauth.a \
	$(AFSBASEDIR)/lib/afs/libsys.a \
	$(AFSBASEDIR)/lib/librx.a \
	$(AFSBASEDIR)/lib/librxkad.a \
	$(AFSBASEDIR)/lib/liblwp.a \
	$(DESLIB) $(AFSUTILS)
#else /* #ifdef AFS_ENV */
        UTILLIB = $(BASEDIR)/lib/libutil.a $(BASEDIR)/lib/libafs.a
        PRSLIB =
#endif /* AFS_ENV */

#ifdef ANDREW_MALLOC_ENV
#ifdef DEBUG_MALLOC_ENV
        MALLOCLIB = $(BASEDIR)/lib/libplumber.a
#else /* DEBUG_MALLOC_ENV */
        MALLOCLIB = $(BASEDIR)/lib/libmalloc.a
#endif /* DEBUG_MALLOC_ENV */
#else /* ANDREW_MALLOC_ENV */
/* 
This should actually be the empty string but needs changes to code 
to enable it to work.
*/
        MALLOCLIB = 
#endif /* ANDREW_MALLOC_ENV */

/* end changeable items */

/* XXX - Need to make this conform to our idea of the macros in force. */
        IMAKE_CMD = $(IMAKE) -Timake.tmpl -I. -I$(IRULESRC) -s Makefile
        DOTDOTIMAKE_CMD = $(IMAKE) -Timake.tmpl -I. -I../$(IRULESRC) -s Makefile


/**/###################################################
/**/# The following comes from andrew.rls
/**/###################################################
#include "andrew.rls"
/**/###################################################
/**/# Back from andrew.rls
/**/###################################################

All:: all
Doc:: doc
doc:: install.doc
Aliases:: aliases
aliases:: install.alias
Install:: install
install:: all install.time doc
system: Install
World:: world
world:: depend install aliases
Tidy:: tidy
Clean:: clean
clean:: tidy

dependInstall:: depend
	make DESTDIR=$(DESTDIR) install

dependAll:: depend
	make DESTDIR=$(DESTDIR) all

depend::
all::

dependInstallClean:: depend install clean

GenericCleanTarget()
MakefileTarget()
TagsTarget()

/**/###################################################
/**/# The following comes from the local Imakefile
/**/###################################################
#include INCLUDE_IMAKEFILE
/**/###################################################
/**/# Back from the local Imakefile
/**/###################################################

SharedObjects()

Makefiles:: Makefile

#ifdef IHaveSubdirs

dependInstallClean::
	@case '$(MFLAGS)' in *[ik]*) set +e;; esac; \
	for i in $(SUBDIRS); \
	do \
	(cd $$i; echo "building (dependInstall) (`pwd`)"; \
	$(MAKE) $(MFLAGS) DESTDIR='$(DESTDIR)' dependInstallClean) \
	done

MakeSubdirs($(SUBDIRS) $(EXTRASUBDIRS))
DependMakeSubdirs($(SUBDIRS) $(EXTRASUBDIRS))
InstallSubdirs($(SUBDIRS))
InstallDocSubdirs($(SUBDIRS))
InstallAliasSubdirs($(SUBDIRS))
DependInstallSubdirs($(SUBDIRS))
WorldInstallSubdirs($(SUBDIRS))
CleanSubdirs($(SUBDIRS) $(EXTRASUBDIRS))
TidySubdirs($(SUBDIRS) $(EXTRASUBDIRS))
TagSubdirs($(SUBDIRS) $(EXTRASUBDIRS))
MakefileSubdirs($(SUBDIRS) $(EXTRASUBDIRS))

#endif /* IHaveSubdirs */

install.time::
	touch install.time

install.doc::
	touch install.doc

install.alias::


/**/##### DEPENDENCY LINE - DO NOT DELETE #####
