.\" $Header: /usr/people/sam/tiff/man/man3/RCS/setfield.3t,v 1.6 91/07/16 16:14:34 sam Exp $
.\"
.\" Copyright (c) 1988, 1989, 1990, 1991 Sam Leffler
.\" Copyright (c) 1991 Silicon Graphics, Inc.
.\"
.\" Permission to use, copy, modify, distribute, and sell this software and 
.\" its documentation for any purpose is hereby granted without fee, provided
.\" that (i) the above copyright notices and this permission notice appear in
.\" all copies of the software and related documentation, and (ii) the names of
.\" Sam Leffler and Silicon Graphics may not be used in any advertising or
.\" publicity relating to the software without the specific, prior written
.\" permission of Sam Leffler and Silicon Graphics.
.\" 
.\" THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
.\" EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
.\" WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
.\" 
.\" IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR
.\" ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,
.\" OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
.\" WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF 
.\" LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE 
.\" OF THIS SOFTWARE.
.\"
.TH TIFFSetField 3T "June 18, 1991"
.SH NAME
TIFFSetField \- set the value(s) of a tag in a
.SM TIFF
file open for writing
.SH SYNOPSIS
.B "#include <tiffio.h>"
.br
.B "int TIFFSetField(TIFF* tif, int tag, ...)"
.br
.B "#include <varargs.h>"
.br
.B "int TIFFVSetField(TIFF* tif, int tag, va_list ap)"
.SH DESCRIPTION
.IR TIFFSetField ()
sets the value of a field in the current directory associated with
the open
.SM TIFF
file
.IR tif .
The file must have been previously opened for writing with
.IR TIFFOpen (3T).
The field is identified by
.IR tag ,
one of the values defined in the include file
.B tiff.h
(see also the table below).
The actual value is specified using a variable argument list,
as prescribed by the
.IR varargs (3)
interface.
A 1 is returned if the operation was successful, or 0 if an
error was detected.
.PP
.IR TIFFVSetField ()
is functionally equivalent to
.IR TIFFSetField ();
except that it takes a pointer to a variable
argument list.
.I TIFFVSetField
is useful for writing routines that are layered
on top of the functionality provided by
.IR TIFFSetField .
.PP
The tags understood by
.IR libtiff ,
the number of parameter values, and the
expected types for the parameter values are shown below.
Tags marked with a \(dg may not have their values changed
once an application begins writing data.
This restriction is applied to those tags that influence
the format of written data.
The data types are specified as in C:
.I char*
is null-terminated string and corresponds to the
.SM ASCII
data type;
.I u_short
is an unsigned 16-bit value;
.I u_long
is an unsigned 32-bit value;
.I u_short*
is an array of unsigned 16-bit values.
Consult the
.SM TIFF
specification for information on the meaning of each tag.
.PP
.nf
.ta \w'TIFFTAG_CONSECUTIVEBADFAXLINES'u+2n +\w'Count'u+2n +\w'u_short**'u+2n
\fITag Name\fP	\fICount\fP	\fITypes\fP	\fINotes\fP
.sp 5p
TIFFTAG_ARTIST	1	char*
TIFFTAG_BADFAXLINES	1	u_long
TIFFTAG_BITSPERSAMPLE	1	u_short	\(dg
TIFFTAG_CLEANFAXDATA	1	u_short
TIFFTAG_COLORMAP	3	u_short*	1<<BitsPerSample arrays
TIFFTAG_COLORRESPONSECURVE	3	u_short*	1<<BitsPerSample entry arrays
TIFFTAG_COLORRESPONSEUNIT	1	u_short
TIFFTAG_COMPRESSION	1	u_short	\(dg
TIFFTAG_CONSECUTIVEBADFAXLINES	1	u_long
TIFFTAG_DATETIME	1	char*
TIFFTAG_DOCUMENTNAME	1	char*
TIFFTAG_FILLORDER	1	u_short	\(dg
TIFFTAG_GRAYRESPONSECURVE	1	u_short*	1<<BitsPerSample entry array
TIFFTAG_GRAYRESPONSEUNIT	1	u_short
TIFFTAG_GROUP3OPTIONS	1	u_long	\(dg
TIFFTAG_GROUP4OPTIONS	1	u_long	\(dg
TIFFTAG_HOSTCOMPUTER	1	char*
TIFFTAG_IMAGEDESCRIPTION	1	char*
TIFFTAG_IMAGEDEPTH	1	u_long	\(dg
TIFFTAG_IMAGELENGTH	1	u_short
TIFFTAG_IMAGEWIDTH	1	u_short	\(dg
TIFFTAG_INKSET	1	u_short
TIFFTAG_JPEGPROC	1	u_short	\(dg
TIFFTAG_JPEGQTABLEPREC	1	u_short	\(dg
TIFFTAG_JPEGQTABLES	1	u_short**	\(dg SamplesPerPixel 64-entry arrays
TIFFTAG_JPEGDCTABLES	1	u_char**	\(dg SamplesPerPixel arrays
TIFFTAG_JPEGACTABLES	1	u_char**	\(dg SamplesPerPixel arrays
TIFFTAG_LUMACOEFS	1	u_short
TIFFTAG_MAKE	1	char*
TIFFTAG_MATTEING	1	u_short	\(dg
TIFFTAG_MAXSAMPLEVALUE	1	u_short
TIFFTAG_MINSAMPLEVALUE	1	u_short
TIFFTAG_MODEL	1	char*
TIFFTAG_ORIENTATION	1	u_short
TIFFTAG_PAGENAME	1	char*
TIFFTAG_PAGENUMBER	2	u_short
TIFFTAG_PHOTOMETRIC	1	u_short	\(dg
TIFFTAG_PLANARCONFIG	1	u_short	\(dg
TIFFTAG_PREDICTOR	1	u_short	\(dg
TIFFTAG_RESOLUTIONUNIT	1	u_short
TIFFTAG_ROWSPERSTRIP	1	u_long	\(dg
TIFFTAG_SAMPLESPERPIXEL	1	u_short	\(dg value must be <= 4
TIFFTAG_SOFTWARE	1	char*
TIFFTAG_SUBFILETYPE	1	u_long
TIFFTAG_THRESHHOLDING	1	u_short
TIFFTAG_TILEDEPTH	1	u_long	\(dg
TIFFTAG_TILELENGTH	1	u_long	\(dg must be a multiple of 8
TIFFTAG_TILEWIDTH	1	u_long	\(dg must be a multiple of 8
TIFFTAG_XPOSITION	1	float
TIFFTAG_XRESOLUTION	1	float
TIFFTAG_YPOSITION	1	float
TIFFTAG_YCBCRSAMPLING	1	u_short*	\(dg 8 entry array
TIFFTAG_YRESOLUTION	1	float
.fi
.SH DIAGNOSTICS
All error messages are directed to the
.IR TIFFError (3T)
routine.
.PP
\fB%s: Cannot modify tag "%s" while writing\fP.
Data has already been written to the file, so the
specified tag's value can not be changed.
This restriction is applied to all tags that affect
the format of written data.
.PP
.BR "Cannot handle %d-channel data"
A value greater than 4 was specified for the
.I SamplesPerPixel
tag.
The library handles at most 4 channel images.
.PP
\fB%d: Bad value for "%s"\fP.
An invalid value was supplied for the named tag.
This usually is caused by supplying the wrong number or
type of parameters.
.SH "SEE ALSO"
.IR intro (3T),
.IR TIFFOpen (3T),
.IR TIFFGetField (3T),
.IR TIFFSetDirectory (3T),
.IR TIFFWriteDirectory (3T),
.IR TIFFReadDirectory (3T)
