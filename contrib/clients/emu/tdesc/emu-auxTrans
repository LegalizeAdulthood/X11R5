/* $Header: /usr3/Src/emu/tdesc/RCS/emu-auxTrans,v 1.1 91/09/30 18:14:39 me Exp $ */

/*
 * Copyright 1990 by PCS Computer Systeme, GmbH. Munich, West Germany.
 *
 *                        All Rights Reserved
 *
 * Permission to use, copy, modify, and distribute this software and its 
 * documentation for any purpose and without fee is hereby granted, 
 * provided that the above copyright notice appear in all copies and that
 * both that copyright notice and this permission notice appear in 
 * supporting documentation, and that the names of PCS or the authors not
 * be used in advertising or publicity pertaining to distribution of the
 * software without specific, written prior permission.  
 * 
 * PCS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
 * ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
 * PCS, THE AUTHORS, OR THEIR HOUSEPETS BE LIABLE FOR ANY SPECIAL, INDIRECT
 * OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF
 * USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
 * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE
 * OF THIS SOFTWARE. SO DON'T SUE US. THANK YOU.
 *
 */

/*
 * Auxilliary keyboard translations for the "emu" terminal.
 *
 * Author: Michael Elbel, Jordan Hubbard.
 * Date: June 28th, 1990
 * Description: Here are the various sorts of keyboard configurations
 *		supported by the "emu" terminal.
 *
 * Revision History:
 *
 * $Log:	emu-auxTrans,v $
# Revision 1.1  91/09/30  18:14:39  me
# Initial revision
# 
 *
 */

*term.emu-auxTrans-appKeypad:						\
	/* Group 1 */							\
	:<Key>KP_0:	key-input("0")\n				\
	:<Key>KP_1:	key-input("1")\n				\
	:<Key>KP_2:	key-input("2")\n				\
	:<Key>KP_3:	key-input("3")\n				\
	:<Key>KP_4:	key-input("4")\n				\
	:<Key>KP_5:	key-input("5")\n				\
	:<Key>KP_6:	key-input("6")\n				\
	:<Key>KP_7:	key-input("7")\n				\
	:<Key>KP_8:	key-input("8")\n				\
	:<Key>KP_9:	key-input("9")\n				\
	/* Group 2 */							\
	:<Key>KP_Decimal: key-input(",")\n				\
	:<Key>KP_Subtract: key-input("-")\n				\
	:<Key>KP_Separator: key-input("")\n				\
	:<Key>KP_Enter:	key-input(".")\n				\

/* Numeric Keypad */
*term.emu-auxTrans-numKeypad:						\
	/* Group 1 */							\
	:<Key>KP_0:	key-input("0")\n				\
	:<Key>KP_1:	key-input("1")\n				\
	:<Key>KP_2:	key-input("2")\n				\
	:<Key>KP_3:	key-input("3")\n				\
	:<Key>KP_4:	key-input("4")\n				\
	:<Key>KP_5:	key-input("5")\n				\
	:<Key>KP_6:	key-input("6")\n				\
	:<Key>KP_7:	key-input("7")\n				\
	:<Key>KP_8:	key-input("8")\n				\
	:<Key>KP_9:	key-input("9")\n				\
	/* Group 2 */							\
	:<Key>KP_Decimal: key-input(".")\n				\
	:<Key>KP_Subtract: key-input("-")\n				\
	:<Key>KP_Separator: key-input(",")\n				\
	:<Key>KP_Enter:	key-input("\r")\n				\

/* Cursor Keys */
*term.emu-auxTrans-CKeys:						\
	~Shift <Key>Up:		key-input("A")\n			\
	~Shift <Key>Down:	key-input("B")\n			\
	~Shift <Key>Left:	key-input("C")\n			\
	~Shift <Key>Right:	key-input("D")\n			\
	
/* Function Keys */
*term.emu-auxTrans-fkeys:						\
	:<Key>F1:	key-input("F1")\n				\
	:<Key>F2:	key-input("F2")\n				\
	:<Key>F3:	key-input("F3")\n				\
	:<Key>F4:	key-input("F4")\n				\
	:<Key>F5:	key-input("F5")\n				\
	:<Key>F6:	key-input("F6")\n				\
	:<Key>F7:	key-input("F7")\n				\
	:<Key>F8:	key-input("F8")\n				\
	:<Key>F9:	key-input("F9")\n				\
	:<Key>F10:	key-input("F10")\n				\
	:<Key>F11:	key-input("F11")\n				\
	:<Key>F12:	key-input("F12")\n				\
	:<Key>F13:	key-input("F13")\n				\
	:<Key>F14:	key-input("F14")\n				\
	:<Key>F15:	key-input("F15")\n				\
	:<Key>F16:	key-input("F16")\n				\
	:<Key>F17:	key-input("F17")\n				\
	:<Key>F18:	key-input("F18")\n				\
	:<Key>F19:	key-input("F19")\n				\
	:<Key>F20:	key-input("F20")\n				\

/* Misc. Function Keys (the ones above the cursor keys) */
*term.emu-auxTrans-miscFkeys:						\
	~Shift <Key>Find:	key-input("find")\n			\
	~Shift <Key>Insert:	key-input("ins")\n			\
	~Shift <Key>Cancel:	key-input("cancel")\n			\
	~Shift <Key>Select:	key-input("sel")\n			\
	~Shift <Key>Prior:	key-input("prior")\n			\
	~Shift <Key>Next:	key-input("next")\n			\

/* Umlaute on braces and so on */
*term.emu-auxTrans-multiKeys:						\
  ~Shift Mod1<Key>bracketleft:	call-parser(ROP_INSERT_CHAR, "", A, 228)\n\
  Shift Mod1<Key>bracketleft:	call-parser(ROP_INSERT_CHAR, "", A, 196)\n\
  ~Shift Mod1<Key>bracketright:	call-parser(ROP_INSERT_CHAR, "", A, 252)\n\
  Shift Mod1<Key>bracketright:	call-parser(ROP_INSERT_CHAR, "", A, 220)\n\
  ~Shift Mod1<Key>backslash:	call-parser(ROP_INSERT_CHAR, "", A, 246)\n\
  Shift Mod1<Key>backslash:	call-parser(ROP_INSERT_CHAR, "", A, 214)\n\
  ~Shift Mod1<Key>grave:	call-parser(ROP_INSERT_CHAR, "", A, 223)\n\
  Shift Mod1<Key>grave:		call-parser(ROP_INSERT_CHAR, "", A, 167)\n
