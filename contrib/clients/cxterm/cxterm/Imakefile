XCOMM $Id: Imakefile,v 1.4 1991/10/01 05:04:49 ygz Exp $
XCOMM $XConsortium: Imakefile,v 1.55 91/09/22 11:40:47 rws Exp $
XCOMM
XCOMM                         Attention xterm porters
XCOMM
XCOMM
XCOMM Xterm assumes that bcopy can handle overlapping arguments.  If your
XCOMM bcopy (or memcpy) cannot, write a routine called bcopy and link it in
XCOMM or add -Dbcopy=mybcopy to the DEFINES list below.
XCOMM

/*
 * add -DWTMP and -DLASTLOG if you want them; make sure that bcopy can
 * handle overlapping copies before using it.
 */
#ifdef SetTtyGroup			/* turn on in config/machine.cf */
   TTYGROUPDEF = -DUSE_TTY_GROUP
#endif
#ifdef UsePUCCPtyd			/* turn on in config/site.def */
    PUCCPTYDDEF = -DPUCC_PTYD		/* does not need to be setuid */
         PTYLIB = -lpucc
#endif

        DEFINES = -DHANZI
   MAIN_DEFINES = -DUTMP $(TTYGROUPDEF) $(PUCCPTYDDEF)
   MISC_DEFINES = /* -DALLOWLOGFILEEXEC */

          SRCS1 = button.c charproc.c cursor.c data.c input.c \
		  main.c menu.c misc.c screen.c scrollbar.c tabs.c \
		  HZinArea.c HZinMthd.c \
		  TekPrsTbl.c Tekproc.c util.c VTPrsTbl.c
          OBJS1 = main.o input.o charproc.o cursor.o util.o tabs.o \
		  screen.o scrollbar.o button.o Tekproc.o misc.o \
		  HZinArea.o HZinMthd.o \
		  VTPrsTbl.o TekPrsTbl.o data.o menu.o
          SRCS2 = hzimpath.c
          OBJS2 = hzimpath.o
           SRCS = $(SRCS1) $(SRCS2)
           OBJS = $(OBJS1) $(OBJS2)
       PROGRAMS = cxterm hzimpath
       DEPLIBS1 = XawClientDepLibs
       DEPLIBS2 = 
       PROGRAMS = cxterm hzimpath

#ifndef TermcapLibrary
#if SystemV && !defined(MacIIArchitecture)
#if defined(CrayArchitecture) || defined(HPArchitecture) || defined(RsArchitecture)
#define TermcapLibrary -lcurses		/* special cases of System V */
#else
#define TermcapLibrary -ltermlib	/* usually in here */
#endif
#else
#define TermcapLibrary -ltermcap	/* bsd puts it here */
#endif
#endif

     TERMCAPLIB = TermcapLibrary

AllTarget($(PROGRAMS))

SpecialObjectRule(main.o,NullParameter,$(MAIN_DEFINES))
SpecialObjectRule(misc.o,NullParameter,$(MISC_DEFINES))
SpecialObjectRule(charproc.o,NullParameter,$(MISC_DEFINES))

#if InstallXtermSetUID
SetUIDProgramTarget(cxterm,$(OBJS1),$(DEPLIBS1),XawClientLibs,$(TERMCAPLIB) $(PTYLIB))
#else
NormalProgramTarget(cxterm,$(OBJS1),$(DEPLIBS1),XawClientLibs,$(TERMCAPLIB) $(PTYLIB))
#endif

#if InstallXtermSetUID && defined(SunArchitecture) && HasSharedLibraries
#if AlternateUsrLibDir
#if OSMajorVersion > 4 || (OSMajorVersion == 4 && OSMinorVersion >= 1)
LDOVERRIDE = -L$(DESTDIR)$(USRLIBDIR)
#else
#if HasGcc
LDOVERRIDE = -static -L$(DESTDIR)$(USRLIBDIR)
#else
LDOVERRIDE = -Bstatic -L$(DESTDIR)$(USRLIBDIR)
LDRESUME = -Bdynamic
#endif
#endif
#endif
install:: cxterm
	MakeDir($(DESTDIR)$(BINDIR))
	$(RM) cxterm.inst
	$(CC) -o cxterm.inst $(OBJS1) $(LDOPTIONS) $(LDOVERRIDE) -lXaw -lXmu -lXt -lXext -lX11 $(LDRESUME) $(LDLIBS) $(TERMCAPLIB) $(PTYLIB) $(EXTRA_LOAD_FLAGS)
	$(INSTALL) -c $(INSTPGMFLAGS) $(INSTUIDFLAGS) cxterm.inst $(DESTDIR)$(BINDIR)/cxterm
	$(RM) cxterm.inst
#else
#if InstallXtermSetUID
InstallProgramWithFlags(cxterm,$(BINDIR),$(INSTUIDFLAGS))
#else
InstallProgramWithFlags(cxterm,$(BINDIR),NullParameter)
#endif
#endif

NormalProgramTarget(hzimpath,$(OBJS2),NullParameter,NullParameter,NullParameter)
InstallProgramWithFlags(hzimpath,$(BINDIR),NullParameter)

InstallManPage(cxterm,$(MANDIR))
InstallManPage(hzimpath,$(MANDIR))

DependTarget()
